{"version":3,"sources":["logo.svg","CustomTile.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTile","props","level","useEffect","TileLayer","attribution","url","opacity","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","iconSize","iconAnchor","popupAnchor","Marker","prototype","options","redOptions","color","App","useState","center","setCenter","radius","setRadius","heightft","setHeightft","heightm","setHeightm","parseInt","LocationMarker","useMapEvents","click","e","latlng","lat","lng","className","style","display","Box","flex","TextField","id","label","type","value","InputLabelProps","shrink","onChange","event","target","margin","Typography","align","Link","href","rel","MapContainer","zoom","height","position","Circle","pathOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,uECyBAA,EAhBI,SAACC,GAAU,IAEnBC,EAAQD,EAARC,MAIP,OAHAC,qBAAU,cAEP,CAACD,IAEA,cAACE,EAAA,EAAD,CACAC,YAAY,yEACNC,IAAK,+DAA+DJ,EACpEK,QAAS,M,4DCEnBC,EAAcC,IAAEC,KAAK,CACvBC,QAASD,IACTE,UAAWC,IACXC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAGpBP,IAAEQ,OAAOC,UAAUC,QAAQT,KAAOF,EAElC,IAAMY,EAAa,CAAEC,MAAO,OA4EbC,MA1Ef,WAAgB,IAAD,EACeC,mBAAS,CAAC,KAAK,IAAI,IADlC,mBACNC,EADM,KACEC,EADF,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGmBJ,mBAAS,MAH5B,mBAGNK,EAHM,KAGIC,EAHJ,OAIiBN,mBAAS,IAJ1B,mBAINO,EAJM,KAIGC,EAJH,KAMb5B,qBAAU,WACR4B,EAAWC,SAAkB,MAATJ,MACnB,CAACA,IAEJ,IAAMK,EAAiB,WAAO,IAAD,EACKV,mBAAS,MADd,6BAEfW,YAAa,CACvBC,MADuB,SACjBC,GACJX,EAAU,CAACW,EAAEC,OAAOC,IAAKF,EAAEC,OAAOE,SAMtC,OAAO,MAET,OACE,sBAAKC,UAAU,MAAMC,MAAO,CAACC,QAAQ,OAAQ,iBAAiB,OAA9D,UACE,eAACC,EAAA,EAAD,CAAMF,MAAO,CAACG,KAAK,GAAnB,UAEA,cAACC,EAAA,EAAD,CACUC,GAAG,SACHC,MAAM,cACNC,KAAK,SACLC,MAAOvB,EACPwB,gBAAiB,CACfC,QAAQ,GAEVC,SAAU,SAACC,GAAD,OAAW1B,EAAU0B,EAAMC,OAAOL,QAC5CM,OAAO,UAET,cAACV,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,cACNC,KAAK,SACLC,MAAOrB,EACPsB,gBAAiB,CACfC,QAAQ,GAEVC,SAAU,SAACC,GAAD,OAAWxB,EAAYwB,EAAMC,OAAOL,QAC9CM,OAAO,UAET,eAACC,EAAA,EAAD,CAAYC,MAAM,SAAlB,oBACA,cAACC,EAAA,EAAD,CAAMC,KAAK,uBAAuBL,OAAO,SAASM,IAAI,aAAtD,wCAER,cAACjB,EAAA,EAAD,CAAKF,MAAO,CAACG,KAAK,GAAlB,SAAsB,eAACiB,EAAA,EAAD,CAAcrC,OAAQA,EAAQsC,KAAM,GAAIrB,MAAO,CAACsB,OAAQ,SAAxD,UAClB,cAAC3D,EAAA,EAAD,CACEC,YAAY,GACZC,IAAI,6CAEN,cAAC,EAAD,CAAYJ,MAAO4B,GAAcA,GACjC,cAACb,EAAA,EAAD,CAAQ+C,SAAUxC,IAKlB,cAACyC,EAAA,EAAD,CACMzC,OAAQA,EACR0C,YAAa9C,EACbM,OAAiB,IAATA,IAEV,cAACO,EAAD,aCxFCkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef7423ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect} from \"react\";\r\nimport {\r\n  useMap,\r\n  TileLayer\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\n\r\n\r\nconst CustomTile = (props) =>{\r\n\r\n    const {level}= props\r\n    useEffect(() => {\r\n\r\n    }, [level]);\r\n    return(\r\n        <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url={\"https://www.floodmap.net/getFMTile.ashx?x={x}&y={y}&z={z}&e=\"+level}\r\n              opacity={0.6}\r\n              ></TileLayer>\r\n    )\r\n\r\n}\r\n\r\nexport default CustomTile","import React, { Component, useState, useCallback, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  TextField, Typography,\n} from \"@material-ui/core\";\n\n\n\nimport CustomTile from \"./CustomTile\";\nimport { MapContainer, TileLayer, Marker, Popup, Circle, useMapEvents } from 'react-leaflet';\n\nimport L from \"leaflet\";\n\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nimport Link from '@material-ui/core/Link';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst redOptions = { color: \"red\" }\n\nfunction App() {\n  const [center, setCenter] = useState([22.3,114,2])\n  const [radius, setRadius] = useState(15)\n  const [heightft, setHeightft] = useState(1500)\n  const [heightm, setHeightm] = useState(10)\n\n  useEffect(()=>{\n    setHeightm(parseInt(heightft*0.3048))\n  }, [heightft])\n\n  const LocationMarker = () => {\n    const [position, setPosition] = useState(null);\n    const map = useMapEvents({\n      click(e) {\n        setCenter([e.latlng.lat, e.latlng.lng])\n        }\n\n        //map.locate()\n    });\n\n    return null;\n  };\n  return (\n    <div className=\"App\" style={{display:'flex', 'flex-direction':'row'}}>\n      <Box  style={{flex:1}}>\n        \n      <TextField\n                id=\"radius\"\n                label=\"Radius (km)\"\n                type=\"number\"\n                value={radius}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(event) => setRadius(event.target.value)}\n                margin=\"dense\"\n              />\n              <TextField\n                id=\"heightft\"\n                label=\"Height (ft)\"\n                type=\"number\"\n                value={heightft}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(event) => setHeightft(event.target.value)}\n                margin=\"dense\"\n              />\n              <Typography align=\"center\">Source: \n              <Link href=\"https://floodmap.net\" target=\"_blank\" rel=\"noreferrer\">https://floodmap.net</Link></Typography>\n      </Box>\n      <Box style={{flex:4}}><MapContainer center={center} zoom={11} style={{height: '100vh'}}>\n          <TileLayer\n            attribution=''\n            url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          />\n          <CustomTile level={heightm} key={heightm}></CustomTile>\n          <Marker position={center}>\n            {/* <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup> */}\n          </Marker>\n          <Circle\n                center={center}\n                pathOptions={redOptions}\n                radius={radius * 1000}\n              ></Circle>\n              <LocationMarker />\n        </MapContainer></Box>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}